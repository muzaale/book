Traceback (most recent call last):
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/d/Library/Python/3.11/lib/python/site-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
import tensorflow as tf

# Set the directory to save the model and data
directory = "image_path = "/Users/d/Dropbox (Personal)/0g.ÎºÎ¿ÏƒÎ¼Î¿Î³Î¿Î½Î¯Î±,Î³/2.pantheon/"

# Create train, val, test folders if they don't exist
train_dir = os.path.join(directory, "train")
val_dir = os.path.join(directory, "val")
test_dir = os.path.join(directory, "test")
for folder in [train_dir, val_dir, test_dir]:
    if not os.path.exists(folder):
        os.makedirs(folder)

# Set up the data generators for training and validation
train_data = tf.keras.preprocessing.image.ImageDataGenerator()
train_generator = train_data.flow_from_directory(os.path.join(train_dir), target_size=(224, 224), batch_size=32, class_mode="binary", classes=['no', 'yes'])
val_data = tf.keras.preprocessing.image.ImageDataGenerator()
val_generator = val_data.flow_from_directory(val_dir, target_size=(224, 224), batch_size=32, class_mode="binary")

# Set up the model
model = tf.keras.Sequential([
    tf.keras.layers.Conv2D(16, (3,3), activation="relu", input_shape=(224,224,3)),
    tf.keras.layers.MaxPooling2D(2,2),
    tf.keras.layers.Flatten(),
    tf.keras.layers.Dense(1, activation="sigmoid")
])
model.compile(loss="binary_crossentropy", optimizer="adam", metrics=["accuracy"])

# Train the model
model.fit(train_generator, epochs=10, validation_data=val_generator)

# Save the model
model.save(os.path.join(directory, "model.h5"))

------------------


[0;36m  Cell [0;32mIn[5], line 5[0;36m[0m
[0;31m    directory = "image_path = "/Users/d/Dropbox (Personal)/0g.ÎºÎ¿ÏƒÎ¼Î¿Î³Î¿Î½Î¯Î±,Î³/2.pantheon/"[0m
[0m                                                           ^[0m
[0;31mSyntaxError[0m[0;31m:[0m invalid decimal literal


